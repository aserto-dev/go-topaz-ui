{"version":3,"file":"static/js/4411.e0c67540.chunk.js","mappings":"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","sources":["components/ApiBrowser/index.tsx","views/ApiDocs/directory.tsx","views/DirectoryBrowser/index.tsx"],"sourcesContent":["import 'rapidoc'\nimport './index.css'\n\nimport React from 'react'\nimport { PaddedContent, PageHeader, theme } from '@aserto/console-common'\n\ntype ApiBrowserProps = {\n  pageTitle: string\n  openapiUrl: string\n}\nconst ApiBrowser: React.FC<ApiBrowserProps> = ({ pageTitle, openapiUrl }) => {\n  return (\n    <>\n      <PageHeader hasBorderBottom title={pageTitle} />\n      <PaddedContent>\n        <rapi-doc\n          bg-color={theme.primaryBlack}\n          nav-bg-color={theme.grey10}\n          primary-color={theme.primary}\n          render-style=\"read\"\n          show-header=\"false\"\n          spec-url={openapiUrl}\n          style={{ height: 'calc(100vh - 140px)', width: '100%' }}\n        ></rapi-doc>\n      </PaddedContent>\n    </>\n  )\n}\n\nexport default ApiBrowser\n","import React, { useMemo } from 'react'\n\nimport { useConfiguration } from '../../api/internal'\nimport ApiBrowser from '../../components/ApiBrowser'\nimport { useActiveConfigurationName } from '../../services/ActiveConfiguration'\n\nconst DirectoryApiDocs = () => {\n  const pageTitle = 'Directory API browser'\n  const { data } = useConfiguration()\n\n  const { configurationName } = useActiveConfigurationName()\n  const configFields = useMemo(() => {\n    return data?.configs.find((e) => e.name === configurationName)\n  }, [configurationName, data?.configs])\n  const directoryServiceUrl = configFields?.directoryServiceUrl\n  return (\n    <ApiBrowser\n      openapiUrl={`${directoryServiceUrl}/directory/openapi.json`}\n      pageTitle={pageTitle}\n    ></ApiBrowser>\n  )\n}\n\nexport default DirectoryApiDocs\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport {\n  Assertions,\n  DangerZone,\n  Directory,\n  DirectoryEvaluator,\n  Frame,\n  Model,\n  ObjectInstance,\n  Objects,\n  Relations,\n} from '@aserto/console-common'\n\nimport DirectoryApiDocs from '../ApiDocs/directory'\n\nconst DirectoryBrowser = () => {\n  return (\n    <Suspense fallback={<Frame />}>\n      <Routes>\n        <Route element={<Directory />} path=\"objects\">\n          <Route element={<Objects />} path=\":objectType\" />\n          <Route element={<ObjectInstance />} path=\":objectType/:objectId/*\" />\n          <Route element={<Navigate replace to=\"user\" />} index />\n        </Route>\n        <Route element={<Directory />} path=\"relations\">\n          <Route element={<Relations />} path=\"\" />\n        </Route>\n        <Route element={<Directory />} path=\"evaluator\">\n          <Route element={<DirectoryEvaluator />} path=\"\" />\n        </Route>\n        <Route element={<Directory />} path=\"model\">\n          <Route element={<Model />} path=\"\" />\n        </Route>\n        <Route element={<Directory />} path=\"assertions\">\n          <Route element={<Assertions />} path=\"\" />\n        </Route>\n        <Route element={<Directory />} path=\"apidocs\">\n          <Route element={<DirectoryApiDocs />} path=\"\" />\n        </Route>\n        <Route element={<Directory />} path=\"danger\">\n          <Route element={<DangerZone />} path=\"\" />\n        </Route>\n        <Route element={<Navigate replace to=\"model\" />} index />\n      </Routes>\n    </Suspense>\n  )\n}\n\nexport default DirectoryBrowser\n"],"names":["_ref","pageTitle","openapiUrl","_jsxs","_Fragment","children","_jsx","PageHeader","hasBorderBottom","title","PaddedContent","theme","primaryBlack","grey10","primary","style","height","width","DirectoryApiDocs","data","useConfiguration","configurationName","useActiveConfigurationName","configFields","useMemo","configs","find","e","name","directoryServiceUrl","ApiBrowser","DirectoryBrowser","Suspense","fallback","Frame","Routes","Route","element","Directory","path","Objects","ObjectInstance","Navigate","replace","to","index","Relations","DirectoryEvaluator","Model","Assertions","DangerZone"],"sourceRoot":""}
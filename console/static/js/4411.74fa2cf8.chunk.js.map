{"version":3,"file":"static/js/4411.74fa2cf8.chunk.js","mappings":"+LAaA,MAyBA,EAzB8CA,IAA8B,IAA7B,WAAEC,EAAU,QAAEC,GAASF,EAYpE,OAXAG,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAYC,SAASC,eAAe,QACtCF,GACFA,EAAUG,iBAAiB,eAAeC,UACxCN,EAAQO,SAASC,IACfN,EAAUO,UAAUD,EAAOE,IAAKF,EAAOG,MAAM,GAC7C,GAEN,GACC,CAACX,KAGFY,EAAAA,EAAAA,KAAA,YACE,WAAUC,EAAAA,GAAMC,aAChBC,GAAG,OACH,eAAcF,EAAAA,GAAMG,OACpB,gBAAeH,EAAAA,GAAMI,QACrB,eAAa,OACb,cAAY,QACZ,WAAUlB,GACA,C,2GC5BhB,MA6BA,EA7ByBmB,KACvB,MAAM,KAAEC,IAASC,EAAAA,EAAAA,OAEX,kBAAEC,IAAsBC,EAAAA,EAAAA,MACxBC,GAAeC,EAAAA,EAAAA,UAAQ,IAChB,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMM,QAAQC,MAAMC,GAAMA,EAAEC,OAASP,KAC3C,CAACA,EAAuB,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMM,UAEvBI,EAAkC,OAAZN,QAAY,IAAZA,OAAY,EAAZA,EAAcM,oBACpCC,EAA8B,OAAZP,QAAY,IAAZA,OAAY,EAAZA,EAAcO,gBAChCC,EAAgC,OAAZR,QAAY,IAAZA,OAAY,EAAZA,EAAcQ,kBAExC,OACEnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CACThC,QAAS,CACP,CACEU,IAAK,kBACLC,MAAOmB,EAAkB,SAASA,IAAoB,IAExD,CACEpB,IAAK,WACLC,MAAOoB,GAAqB,KAGhChC,WAAY,GAAG8B,4BACH,C,2GCflB,MAiCA,EAjCyBI,KAErBrB,EAAAA,EAAAA,KAACsB,EAAAA,SAAQ,CAACC,UAAUvB,EAAAA,EAAAA,KAACwB,EAAAA,GAAK,IAAIC,UAC5BC,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CAAAF,SAAA,EACLC,EAAAA,EAAAA,MAACE,EAAAA,GAAK,CAACC,SAAS7B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAS,IAAKC,KAAK,UAASN,SAAA,EAC3CzB,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACC,SAAS7B,EAAAA,EAAAA,KAACgC,EAAAA,GAAO,IAAKD,KAAK,iBAClC/B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACC,SAAS7B,EAAAA,EAAAA,KAACiC,EAAAA,GAAc,IAAKF,KAAK,6BACzC/B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACC,SAAS7B,EAAAA,EAAAA,KAACkC,EAAAA,GAAQ,CAACC,SAAO,EAACC,GAAG,SAAWC,OAAK,QAEvDrC,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACC,SAAS7B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAS,IAAKC,KAAK,YAAWN,UAC7CzB,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACC,SAAS7B,EAAAA,EAAAA,KAACsC,EAAAA,GAAS,IAAKP,KAAK,QAEtC/B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACC,SAAS7B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAS,IAAKC,KAAK,YAAWN,UAC7CzB,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACC,SAAS7B,EAAAA,EAAAA,KAACuC,EAAAA,EAAkB,IAAKR,KAAK,QAE/C/B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACC,SAAS7B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAS,IAAKC,KAAK,QAAON,UACzCzB,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACC,SAAS7B,EAAAA,EAAAA,KAACwC,EAAAA,GAAK,IAAKT,KAAK,QAElC/B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACC,SAAS7B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAS,IAAKC,KAAK,aAAYN,UAC9CzB,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACC,SAAS7B,EAAAA,EAAAA,KAACyC,EAAAA,GAAU,IAAKV,KAAK,QAEvC/B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACC,SAAS7B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAS,IAAKC,KAAK,UAASN,UAC3CzB,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACC,SAAS7B,EAAAA,EAAAA,KAACM,EAAAA,QAAgB,IAAKyB,KAAK,QAE7C/B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACC,SAAS7B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAS,IAAKC,KAAK,SAAQN,UAC1CzB,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACC,SAAS7B,EAAAA,EAAAA,KAAC0C,EAAAA,GAAU,IAAKX,KAAK,QAEvC/B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACC,SAAS7B,EAAAA,EAAAA,KAACkC,EAAAA,GAAQ,CAACC,SAAO,EAACC,GAAG,UAAYC,OAAK,Q","sources":["components/ApiBrowser/index.tsx","views/ApiDocs/directory.tsx","views/DirectoryBrowser/index.tsx"],"sourcesContent":["import 'rapidoc'\nimport './index.css'\n\nimport React, { useEffect } from 'react'\nimport { theme } from '@aserto/console-common'\n\ntype ApiBrowserProps = {\n  openApiUrl: string\n  apiKeys: {\n    key: string\n    value: string\n  }[]\n}\nconst ApiBrowser: React.FC<ApiBrowserProps> = ({ openApiUrl, apiKeys }) => {\n  useEffect(() => {\n    const rapidocEL = document.getElementById('docs') as RapiDocElement\n    if (rapidocEL) {\n      rapidocEL.addEventListener('spec-loaded', async () => {\n        apiKeys.forEach((apiKey) => {\n          rapidocEL.setApiKey(apiKey.key, apiKey.value)\n        })\n      })\n    }\n  }, [apiKeys])\n\n  return (\n    <rapi-doc\n      bg-color={theme.primaryBlack}\n      id=\"docs\"\n      nav-bg-color={theme.grey10}\n      primary-color={theme.primary}\n      render-style=\"read\"\n      show-header=\"false\"\n      spec-url={openApiUrl}\n    ></rapi-doc>\n  )\n}\n\nexport default ApiBrowser\n","import React, { useMemo } from 'react'\n\nimport { useConfiguration } from '../../api/internal'\nimport ApiBrowser from '../../components/ApiBrowser'\nimport { useActiveConfigurationName } from '../../services/ActiveConfiguration'\n\nconst DirectoryApiDocs = () => {\n  const { data } = useConfiguration()\n\n  const { configurationName } = useActiveConfigurationName()\n  const configFields = useMemo(() => {\n    return data?.configs.find((e) => e.name === configurationName)\n  }, [configurationName, data?.configs])\n\n  const directoryServiceUrl = configFields?.directoryServiceUrl\n  const directoryApiKey = configFields?.directoryApiKey\n  const directoryTenantId = configFields?.directoryTenantId\n\n  return (\n    <ApiBrowser\n      apiKeys={[\n        {\n          key: 'DirectoryAPIKey',\n          value: directoryApiKey ? `Basic ${directoryApiKey}` : '',\n        },\n        {\n          key: 'TenantID',\n          value: directoryTenantId || '',\n        },\n      ]}\n      openApiUrl={`${directoryServiceUrl}/directory/openapi.json`}\n    ></ApiBrowser>\n  )\n}\n\nexport default DirectoryApiDocs\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport {\n  Assertions,\n  DangerZone,\n  Directory,\n  DirectoryEvaluator,\n  Frame,\n  Model,\n  ObjectInstance,\n  Objects,\n  Relations,\n} from '@aserto/console-common'\n\nimport DirectoryApiDocs from '../ApiDocs/directory'\n\nconst DirectoryBrowser = () => {\n  return (\n    <Suspense fallback={<Frame />}>\n      <Routes>\n        <Route element={<Directory />} path=\"objects\">\n          <Route element={<Objects />} path=\":objectType\" />\n          <Route element={<ObjectInstance />} path=\":objectType/:objectId/*\" />\n          <Route element={<Navigate replace to=\"user\" />} index />\n        </Route>\n        <Route element={<Directory />} path=\"relations\">\n          <Route element={<Relations />} path=\"\" />\n        </Route>\n        <Route element={<Directory />} path=\"evaluator\">\n          <Route element={<DirectoryEvaluator />} path=\"\" />\n        </Route>\n        <Route element={<Directory />} path=\"model\">\n          <Route element={<Model />} path=\"\" />\n        </Route>\n        <Route element={<Directory />} path=\"assertions\">\n          <Route element={<Assertions />} path=\"\" />\n        </Route>\n        <Route element={<Directory />} path=\"apidocs\">\n          <Route element={<DirectoryApiDocs />} path=\"\" />\n        </Route>\n        <Route element={<Directory />} path=\"danger\">\n          <Route element={<DangerZone />} path=\"\" />\n        </Route>\n        <Route element={<Navigate replace to=\"model\" />} index />\n      </Routes>\n    </Suspense>\n  )\n}\n\nexport default DirectoryBrowser\n"],"names":["_ref","openApiUrl","apiKeys","useEffect","rapidocEL","document","getElementById","addEventListener","async","forEach","apiKey","setApiKey","key","value","_jsx","theme","primaryBlack","id","grey10","primary","DirectoryApiDocs","data","useConfiguration","configurationName","useActiveConfigurationName","configFields","useMemo","configs","find","e","name","directoryServiceUrl","directoryApiKey","directoryTenantId","ApiBrowser","DirectoryBrowser","Suspense","fallback","Frame","children","_jsxs","Routes","Route","element","Directory","path","Objects","ObjectInstance","Navigate","replace","to","index","Relations","DirectoryEvaluator","Model","Assertions","DangerZone"],"sourceRoot":""}
{"version":3,"file":"static/js/6711.74db2193.chunk.js","mappings":"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","sources":["components/ApiBrowser/index.tsx","views/ApiDocs/authorizer.tsx","components/policies/PolicyBrowser/Sidebar/styles.tsx","components/policies/PolicyBrowser/Sidebar/index.tsx","views/PolicyInstance/styles.tsx","views/PolicyInstance/Header.tsx","views/PolicyInstance/Frame.tsx","views/PolicyInstance/index.tsx"],"sourcesContent":["import 'rapidoc'\nimport './index.css'\n\nimport React from 'react'\nimport { theme } from '@aserto/console-common'\n\ntype ApiBrowserProps = {\n  openapiUrl: string\n}\nconst ApiBrowser: React.FC<ApiBrowserProps> = ({ openapiUrl }) => {\n  return (\n    <rapi-doc\n      bg-color={theme.primaryBlack}\n      nav-bg-color={theme.grey10}\n      primary-color={theme.primary}\n      render-style=\"read\"\n      show-header=\"false\"\n      spec-url={openapiUrl}\n    ></rapi-doc>\n  )\n}\n\nexport default ApiBrowser\n","import React, { useMemo } from 'react'\n\nimport { useConfiguration } from '../../api/internal'\nimport ApiBrowser from '../../components/ApiBrowser'\nimport { useActiveConfigurationName } from '../../services/ActiveConfiguration'\n\nconst AuthorizerApiDocs = () => {\n  const { data } = useConfiguration()\n\n  const { configurationName } = useActiveConfigurationName()\n  const configFields = useMemo(() => {\n    return data?.configs.find((e) => e.name === configurationName)\n  }, [configurationName, data?.configs])\n  const authorizerServiceUrl = configFields?.authorizerServiceUrl\n  return <ApiBrowser openapiUrl={`${authorizerServiceUrl}/authorizer/openapi.json`}></ApiBrowser>\n}\n\nexport default AuthorizerApiDocs\n","import styled from 'styled-components'\n\nexport const LeftContainer = styled.div`\n  margin-right: 20px;\n  min-width: 250px;\n  @media (max-width: 1327px) {\n    display: none;\n  }\n`\n\nexport const SelectContainer = styled.div`\n  width: 100%;\n  display: none;\n  margin-bottom: 20px;\n  @media (max-width: 1327px) {\n    display: block;\n    width: 100%;\n  }\n`\nexport const Row = styled.div`\n  display: flex;\n  line-height: 1;\n  @media (max-width: 1327px) {\n    flex-wrap: wrap;\n    padding: 20px;\n  }\n  @media (min-width: 991px) {\n    /* margin-top: 70px; */\n  }\n`\n","import './PolicyBrowser.css'\n\nimport React from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { Select, SelectOption, VerticalTab } from '@aserto/console-common'\n\nimport { LeftContainer, Row, SelectContainer } from './styles'\n\nenum OptionValues {\n  docs = 'API Browser',\n  evaluator = 'Evaluator',\n  modules = 'Modules',\n}\n\nexport const PolicyInstanceSidebar: React.FC = () => {\n  const navigate = useNavigate()\n\n  interface VerticalTabOptionsProps {\n    label: string\n    value: keyof typeof OptionValues\n    isDisabled?: boolean\n  }\n\n  const verticalTabOptions: VerticalTabOptionsProps[] = [\n    { label: OptionValues.modules, value: 'modules' },\n    { label: OptionValues.evaluator, value: 'evaluator' },\n    { label: OptionValues.docs, value: 'docs' },\n  ]\n  const { pathname } = useLocation()\n  const selectedOption = pathname.replace(`/ui/authorizer/`, '').split('/')[0]\n  const onChangeVerticalTab = (value: string) => {\n    navigate(`/ui/authorizer/${value as keyof typeof OptionValues}`)\n  }\n\n  return (\n    <Row>\n      <LeftContainer>\n        <VerticalTab\n          options={verticalTabOptions}\n          selectedValue={selectedOption}\n          onChange={onChangeVerticalTab}\n        />\n      </LeftContainer>\n      <SelectContainer>\n        <Select\n          aria-label=\"Sections\"\n          options={verticalTabOptions}\n          value={verticalTabOptions.find((option: SelectOption) => option.value === selectedOption)}\n          onChange={(option) => onChangeVerticalTab(String(option!.value))}\n        />\n      </SelectContainer>\n    </Row>\n  )\n}\n","import styled from 'styled-components'\n\nexport const Grid = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 0 85px 1fr;\n  gap: 0px 0px;\n  grid-template-areas:\n    'header'\n    'sidebar'\n    'content';\n\n  @media (min-width: 1px) {\n  }\n\n  @media (min-width: 1328px) {\n    display: grid;\n    grid-template-columns: 250px 1.3fr 1fr;\n    grid-template-rows: 0 1.7fr 1fr;\n    gap: 0px 0px;\n    grid-template-areas:\n      'header header header'\n      'sidebar content content'\n      'sidebar content content';\n  }\n  .decision-logs-content {\n    height: 100%;\n    overflow-x: hidden;\n  }\n`\n\nexport const Header = styled.div`\n  @media (min-width: 1328px) {\n    grid-area: header;\n  }\n`\n\nexport const Sidebar = styled.div`\n  @media (min-width: 1328px) {\n    grid-area: sidebar;\n  }\n`\n\nexport const Content = styled.div`\n  grid-area: content;\n  display: flex;\n  height: 100%;\n  width: 100%;\n`\n","import React from 'react'\nimport { Breadcrumb, BreadCrumbPart, PageHeader, PageHeaderContent } from '@aserto/console-common'\n\nimport { useActiveConfigurationName } from '../../services/ActiveConfiguration'\nimport { Header } from './styles'\n\nconst HeaderComponent: React.FC = () => {\n  const { configurationName } = useActiveConfigurationName()\n  const breadcrumbParts: BreadCrumbPart[] = [{ text: `Configuration/${configurationName}` }]\n\n  return (\n    <Header>\n      <PageHeader hasBorderBottom={true}>\n        <PageHeaderContent>\n          <Breadcrumb breadcrumbParts={breadcrumbParts} />\n        </PageHeaderContent>\n      </PageHeader>\n    </Header>\n  )\n}\n\nexport default HeaderComponent\n","import React, { PropsWithChildren } from 'react'\nimport { PaddedContent } from '@aserto/console-common'\n\nimport { PolicyInstanceSidebar } from '../../components/policies/PolicyBrowser/Sidebar'\nimport HeaderComponent from './Header'\nimport { Content, Grid, Sidebar } from './styles'\n\nconst Frame: React.FC<PropsWithChildren<{ className?: string }>> = ({ children, className }) => {\n  return (\n    <PaddedContent>\n      <Grid>\n        <HeaderComponent />\n        <Sidebar>\n          <PolicyInstanceSidebar />\n        </Sidebar>\n        <Content className={className}>{children}</Content>\n      </Grid>\n    </PaddedContent>\n  )\n}\n\nexport default Frame\n","import './index.css'\n\nimport React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\n\nimport ConsoleCommonProvider from '../../services/ConsoleCommonProvider'\nimport AuthorizerApiDocs from '../ApiDocs/authorizer'\nimport Frame from './Frame'\n\nconst Evaluator = React.lazy(() => import('./views/Evaluator'))\nconst Modules = React.lazy(() => import('./views/Modules'))\n\nconst PolicyInstanceDetails = () => {\n  return (\n    <ConsoleCommonProvider>\n      <Suspense fallback={<Frame></Frame>}>\n        <Routes>\n          <Route element={<Evaluator />} path=\"/evaluator\" />\n          <Route element={<Modules />} path=\"/modules\" />\n          <Route\n            element={\n              <>\n                <Frame>\n                  <AuthorizerApiDocs />\n                </Frame>\n              </>\n            }\n            path=\"/docs\"\n          />\n          <Route element={<Navigate to=\"modules\" />} path=\"*\" />\n        </Routes>\n      </Suspense>\n    </ConsoleCommonProvider>\n  )\n}\n\nexport default PolicyInstanceDetails\n"],"names":["_ref","openapiUrl","_jsx","theme","primaryBlack","grey10","primary","AuthorizerApiDocs","data","useConfiguration","configurationName","useActiveConfigurationName","configFields","useMemo","configs","find","e","name","authorizerServiceUrl","ApiBrowser","LeftContainer","styled","div","SelectContainer","Row","OptionValues","PolicyInstanceSidebar","navigate","useNavigate","verticalTabOptions","label","modules","value","evaluator","docs","pathname","useLocation","selectedOption","replace","split","onChangeVerticalTab","_jsxs","children","VerticalTab","options","selectedValue","onChange","Select","option","String","Grid","Header","Sidebar","Content","HeaderComponent","breadcrumbParts","text","PageHeader","hasBorderBottom","PageHeaderContent","Breadcrumb","className","PaddedContent","Evaluator","React","Modules","PolicyInstanceDetails","ConsoleCommonProvider","Suspense","fallback","Frame","Routes","Route","element","path","_Fragment","Navigate","to"],"sourceRoot":""}
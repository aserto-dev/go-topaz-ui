{"version":3,"file":"static/js/820.71af5fc1.chunk.js","mappings":"yLAaA,MAyBA,EAzB8CA,IAA8B,IAA7B,WAAEC,EAAU,QAAEC,GAASF,EAYpE,OAXAG,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAYC,SAASC,eAAe,QACtCF,GACFA,EAAUG,iBAAiB,eAAeC,UACxCN,EAAQO,SAASC,IACfN,EAAUO,UAAUD,EAAOE,IAAKF,EAAOG,MAAM,GAC7C,GAEN,GACC,CAACX,KAGFY,EAAAA,EAAAA,KAAA,YACE,WAAUC,EAAAA,GAAMC,aAChBC,GAAG,OACH,eAAcF,EAAAA,GAAMG,OACpB,gBAAeH,EAAAA,GAAMI,QACrB,eAAa,OACb,cAAY,QACZ,WAAUlB,GACA,C,2GC5BhB,MAwBA,EAxB0BmB,KACxB,MAAM,KAAEC,IAASC,EAAAA,EAAAA,OAEX,kBAAEC,IAAsBC,EAAAA,EAAAA,MACxBC,GAAeC,EAAAA,EAAAA,UAAQ,IAChB,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMM,QAAQC,MAAMC,GAAMA,EAAEC,OAASP,KAC3C,CAACA,EAAuB,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMM,UAEvBI,EAAmC,OAAZN,QAAY,IAAZA,OAAY,EAAZA,EAAcM,qBACrCC,EAA+B,OAAZP,QAAY,IAAZA,OAAY,EAAZA,EAAcO,iBAEvC,OACElB,EAAAA,EAAAA,KAACmB,EAAAA,EAAU,CACT/B,QAAS,CACP,CACEU,IAAK,mBACLC,MAAOmB,EAAmB,SAASA,IAAqB,KAG5D/B,WAAY,GAAG8B,6BACH,C","sources":["components/ApiBrowser/index.tsx","views/ApiDocs/authorizer.tsx"],"sourcesContent":["import 'rapidoc'\nimport './index.css'\n\nimport React, { useEffect } from 'react'\nimport { theme } from '@aserto/console-common'\n\ntype ApiBrowserProps = {\n  openApiUrl: string\n  apiKeys: {\n    key: string\n    value: string\n  }[]\n}\nconst ApiBrowser: React.FC<ApiBrowserProps> = ({ openApiUrl, apiKeys }) => {\n  useEffect(() => {\n    const rapidocEL = document.getElementById('docs') as RapiDocElement\n    if (rapidocEL) {\n      rapidocEL.addEventListener('spec-loaded', async () => {\n        apiKeys.forEach((apiKey) => {\n          rapidocEL.setApiKey(apiKey.key, apiKey.value)\n        })\n      })\n    }\n  }, [apiKeys])\n\n  return (\n    <rapi-doc\n      bg-color={theme.primaryBlack}\n      id=\"docs\"\n      nav-bg-color={theme.grey10}\n      primary-color={theme.primary}\n      render-style=\"read\"\n      show-header=\"false\"\n      spec-url={openApiUrl}\n    ></rapi-doc>\n  )\n}\n\nexport default ApiBrowser\n","import React, { useMemo } from 'react'\n\nimport { useConfiguration } from '../../api/internal'\nimport ApiBrowser from '../../components/ApiBrowser'\nimport { useActiveConfigurationName } from '../../services/ActiveConfiguration'\n\nconst AuthorizerApiDocs = () => {\n  const { data } = useConfiguration()\n\n  const { configurationName } = useActiveConfigurationName()\n  const configFields = useMemo(() => {\n    return data?.configs.find((e) => e.name === configurationName)\n  }, [configurationName, data?.configs])\n\n  const authorizerServiceUrl = configFields?.authorizerServiceUrl\n  const authorizerApiKey = configFields?.authorizerApiKey\n\n  return (\n    <ApiBrowser\n      apiKeys={[\n        {\n          key: 'AuthorizerAPIKey',\n          value: authorizerApiKey ? `Basic ${authorizerApiKey}` : '',\n        },\n      ]}\n      openApiUrl={`${authorizerServiceUrl}/authorizer/openapi.json`}\n    ></ApiBrowser>\n  )\n}\n\nexport default AuthorizerApiDocs\n"],"names":["_ref","openApiUrl","apiKeys","useEffect","rapidocEL","document","getElementById","addEventListener","async","forEach","apiKey","setApiKey","key","value","_jsx","theme","primaryBlack","id","grey10","primary","AuthorizerApiDocs","data","useConfiguration","configurationName","useActiveConfigurationName","configFields","useMemo","configs","find","e","name","authorizerServiceUrl","authorizerApiKey","ApiBrowser"],"sourceRoot":""}